geom_point()
p
p <- ggplot(subset(df2,Time == 1290), aes(Distance, Density, color = Speed)) +
geom_point()
p
p <- ggplot(subset(df2,Time == 1490), aes(Distance, Density, color = Speed)) +
geom_point()
p
p <- ggplot(subset(df2,Time == 1590), aes(Distance, Density, color = Speed)) +
geom_point()
p
p <- ggplot(subset(df2,Time == 1490), aes(Distance, Density, color = Speed)) +
geom_point()
p
subset(df2,Time == 1490)$Density
df2$Test<-df2$Density/(1+df2$Speed)^2
p <- ggplot(subset(df2,Time == 1490), aes(Distance, Test, color = Speed)) +
geom_point()
p
df2$Test<-df2$Density/(1+df2$Speed)
df2$Test<-1
p <- ggplot(subset(df2,Time == 1490), aes(Distance, Test, color = Speed)) +
geom_point()
df2$Test<-df2$Density/(1+df2$Speed)
p <- ggplot(subset(df2,Time == 1490), aes(Distance, Test, color = Speed)) +
geom_point()
p
df2$Test<-df2$Density/(1+df2$Speed)^2
p <- ggplot(subset(df2,Time == 1490), aes(Distance, Test, color = Speed)) +
geom_point()
p
df2$Test<-df2$Density/(1+df2$Speed)^3
p <- ggplot(subset(df2,Time == 1490), aes(Distance, Test, color = Speed)) +
geom_point()
p
df2$Test<-df2$Density/(1+df2$Speed)^2
p <- ggplot(subset(df2,Time == 1490), aes(Distance, Test, color = Speed)) +
geom_point()
p
library(ggplot2)
f <- file.choose()
df <- read.table(f,header = TRUE)
f <- file.choose()
df <- read.table(f,header = TRUE)
df$Time<-as.factor(df$Time)
df1<-subset(df, WaveFrontID == '62aa0281-26ab-46bc-9266-756d3e55f69b', select = c("Time","Distance","Speed") )
p <- ggplot( aes(Time, Distance, color = Speed)) +
geom_point()
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point()
p
df <- read.table(f,header = TRUE)
df1<-subset(df, WaveFrontID == '62aa0281-26ab-46bc-9266-756d3e55f69b', select = c("Time","Distance","Speed") )
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point()
p
max<-max(df1$Distance)
x<-subset(df1, Time > 2800)
df2<-subset(df1, Time > 2800)
df1[["Distance" == max]]
df1[["Distance" > max]]
df1[["Distance" > max]]$Time
View(df)
View(df)
df2<-subset(df2, Time < 2965)
xy.lm <- lm(df2$Distance ~ df2$Time)
summary(xy.lm)
xy.lm$coefficients
xy.lm$Time<-df2$Time
b <- xy.lm$coefficients[1]
a <- xy.lm$coefficients[2]
xy.lm$Time<-df2$Time
getDistance <- function(x){
return(a*x+b)}
lapply(xy.lm$Time,getDistance)
df2$Distance<-lapply(xy.lm$Time,getDistance)
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_line(df2,aes(df2$Time,df2$Distance, col="red", lwd=3))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_line(df2,aes(df2$Time,df2$Distance, color="red"))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_line(df2,aes(df2$Time,df2$Distance, color="red"))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = a, slope = b)
p
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = a, slope = b,color="red",
linetype="dashed", size=1.5)
p
xy.lm$coefficients
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = -6545.384841, slope = 2.615398,color="red",
linetype="dashed", size=1.5)
p
# Equation of the line :
eq = paste0("y = ", round(xy.lm$coefficients[2],1), "*x + ", round(xy.lm$coefficients[1],1))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = xy.lm$coefficients[1], slope = xy.lm$coefficients[2],color="red",
linetype="dashed", size=1.5) + ggtitle(eq)
p
library(gganimate)
library(ggplot2)
library(plotly)
f <- file.choose()
df <- read.table(f,header = TRUE)
##WaveFront 906b0de3-8076-4b8e-84f2-e0016348d39a
##WaveEnd e3af6668-ccb0-4cba-8eda-1841fbb10c5f
##ACC 1.0
T1<-1923
T2<-2250
df1<-subset(df, WaveFrontID == '906b0de3-8076-4b8e-84f2-e0016348d39a', select = c("Time","Distance","Speed"))
max<-max(df1$Distance)
df2<-subset(df1, Time > T1)
df2<-subset(df2, Time < T2)
xy.lm <- lm(df2$Distance ~ df2$Time)
summary(xy.lm)
xy.lm$coefficients
b <- xy.lm$coefficients[1]
a <- xy.lm$coefficients[2]
xy.lm$Time<-df2$Time
getDistance <- function(x){
return(a*x+b)}
df2$Distance<-lapply(xy.lm$Time,getDistance)
# Equation of the line :
eq = paste0("y = ", round(xy.lm$coefficients[2],1), "*x + ", round(xy.lm$coefficients[1],1))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = xy.lm$coefficients[1], slope = xy.lm$coefficients[2],color="red",
linetype="dashed", size=1.5) + ggtitle(eq)
geom_line(df2,aes(df2$Time,df2$Distance, color="red"))
p
fig <- ggplotly(p)
fig
df2forFitting<-subset(df2, Time > T1+50)
xy.lm <- lm(df2$Distance ~ df2$Time)
summary(xy.lm)
xy.lm$coefficients
b <- xy.lm$coefficients[1]
a <- xy.lm$coefficients[2]
xy.lm$Time<-df2$Time
getDistance <- function(x){
return(a*x+b)}
df2$Distance<-lapply(xy.lm$Time,getDistance)
# Equation of the line :
eq = paste0("y = ", round(xy.lm$coefficients[2],1), "*x + ", round(xy.lm$coefficients[1],1))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = xy.lm$coefficients[1], slope = xy.lm$coefficients[2],color="red",
linetype="dashed", size=1.5) + ggtitle(eq)
geom_line(df2,aes(df2$Time,df2$Distance, color="red"))
p
fig <- ggplotly(p)
fig
df2forFitting<-subset(df2, Time > 2200)
xy.lm <- lm(df2$Distance ~ df2$Time)
summary(xy.lm)
xy.lm$coefficients
b <- xy.lm$coefficients[1]
a <- xy.lm$coefficients[2]
xy.lm$Time<-df2$Time
getDistance <- function(x){
return(a*x+b)}
df2$Distance<-lapply(xy.lm$Time,getDistance)
# Equation of the line :
eq = paste0("y = ", round(xy.lm$coefficients[2],1), "*x + ", round(xy.lm$coefficients[1],1))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = xy.lm$coefficients[1], slope = xy.lm$coefficients[2],color="red",
linetype="dashed", size=1.5) + ggtitle(eq)
geom_line(df2,aes(df2$Time,df2$Distance, color="red"))
p
fig <- ggplotly(p)
fig
df2forFitting
df2forFitting
xy.lm <- lm(df2forFitting$Distance ~ df2forFitting$Time)
summary(xy.lm)
xy.lm$coefficients
b <- xy.lm$coefficients[1]
a <- xy.lm$coefficients[2]
xy.lm$Time<-df2$Time
getDistance <- function(x){
return(a*x+b)}
df2$Distance<-lapply(xy.lm$Time,getDistance)
# Equation of the line :
eq = paste0("y = ", round(xy.lm$coefficients[2],1), "*x + ", round(xy.lm$coefficients[1],1))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = xy.lm$coefficients[1], slope = xy.lm$coefficients[2],color="red",
linetype="dashed", size=1.5) + ggtitle(eq)
geom_line(df2,aes(df2$Time,df2$Distance, color="red"))
p
fig <- ggplotly(p)
fig
df2forFitting<-subset(df2, Time > 2200)
a
b
xy.lm <- lm(df2forFitting$Distance ~ df2forFitting$Time)
xy.lm <- lm(df2forFitting$Distance ~ df2forFitting$Time)
xy.lm <- lm(df2$Distance ~ df2$Time)
df1<-subset(df, WaveFrontID == '906b0de3-8076-4b8e-84f2-e0016348d39a', select = c("Time","Distance","Speed"))
max<-max(df1$Distance)
df2<-subset(df1, Time > T1)
df2<-subset(df2, Time < T2)
df2forFitting<-subset(df2, Time > 2200)
df2forFitting
df2
xy.lm <- lm(df2$Distance ~ df2$Time)
xy.lm <- lm(df2forFitting$Distance ~ df2forFitting$Time)
summary(xy.lm)
xy.lm$coefficients
b <- xy.lm$coefficients[1]
a <- xy.lm$coefficients[2]
xy.lm$Time<-df2$Time
getDistance <- function(x){
return(a*x+b)}
df2$Distance<-lapply(xy.lm$Time,getDistance)
# Equation of the line :
eq = paste0("y = ", round(xy.lm$coefficients[2],1), "*x + ", round(xy.lm$coefficients[1],1))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = xy.lm$coefficients[1], slope = xy.lm$coefficients[2],color="red",
linetype="dashed", size=1.5) + ggtitle(eq)
geom_line(df2,aes(df2$Time,df2$Distance, color="red"))
p
fig <- ggplotly(p)
fig
df1<-subset(df, WaveFrontID == c(WaveFront,WaveEnd), select = c("Time","Distance","Speed"))
##WaveFront 906b0de3-8076-4b8e-84f2-e0016348d39a
##WaveEnd e3af6668-ccb0-4cba-8eda-1841fbb10c5f
##ACC 1.0
WaveFront<-'906b0de3-8076-4b8e-84f2-e0016348d39a'
WaveEnd<-'e3af6668-ccb0-4cba-8eda-1841fbb10c5f'
T1<-1923
T2<-2250
df1<-subset(df, WaveFrontID == WaveFront | WaveFrontID == WaveEnd, select = c("Time","Distance","Speed", "WaveFrontID"))
df1
df2forFitting<-subset(df2, Time > 2200)
max<-max(df1$Distance)
df2<-subset(df1, Time > T1)
df2<-subset(df2, Time < T2)
df2forFitting<-subset(df2, Time > 2200)
setwd("~/TS/R/WaveCongestion")
p2
p2 <- ggplot(df2,aes(Time, Size,color = 'Red') )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
library(gganimate)
library(ggplot2)
library(plotly)
library(cowplot)
library(tools)
p1 <- ggplot( df,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
T0<-2200
SampleRoadID<-'f713621e-051e-4b24-94fd-eb4aa0c3ea14'
SumRoadID<-'00000000-0000-0000-0000-000000000000'
p1 <- ggplot( df,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
p1
f <- file.choose()
df <- read.table(f,header = TRUE)
ACC<-'ACC 1.0'
df1<-subset(df, RoadID == SampleRoadID)
df2<-subset(df, RoadID == SumRoadID)
p1 <- ggplot( df,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
p1
##geom_smooth(method = "lm", formula = y ~ poly(x, 4), se = FALSE)
plot.all.roads.normalized <- ggplot( df,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.all.roads.normalized
plot.sum <- ggplot(df2,aes(Time, Size,color = 'Red') )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum
plot.sum <- ggplot(df2,aes(Time, Size) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum <- ggplot(df2,aes(Time, Size, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum
basename(f)
filename<-"04-09-2020_12.17.25.CongestionSizeOnRoads"
##SampleRoadID<-'f713621e-051e-4b24-94fd-eb4aa0c3ea14'
SumRoadID<-'00000000-0000-0000-0000-000000000000'
T0<-3000
library(gganimate)
library(ggplot2)
library(plotly)
library(cowplot)
library(tools)
f <- file.choose()
df <- read.table(f,header = TRUE)
ACC<-'ACC 1.0'
df2<-subset(df, RoadID == SumRoadID)
plot.all.roads <- ggplot( df,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
##geom_smooth(method = "lm", formula = y ~ poly(x, 4), se = FALSE)
plot.all.roads.normalized <- ggplot( df,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.normalized <- ggplot( df1,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road <- ggplot( df1,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum <- ggplot(df2,aes(Time, Size, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
##geom_smooth(method = "lm", formula = y ~ poly(x, 4), se = FALSE)
plot.sum.normalized <- ggplot(df2,aes(Time, SizeNormalized, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum
plot.all.roads.normalized
plot.all.roads
T0<-2900
plot.all.roads <- ggplot( df,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
##geom_smooth(method = "lm", formula = y ~ poly(x, 4), se = FALSE)
plot.all.roads.normalized <- ggplot( df,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.normalized <- ggplot( df1,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road <- ggplot( df1,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum <- ggplot(df2,aes(Time, Size, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
##geom_smooth(method = "lm", formula = y ~ poly(x, 4), se = FALSE)
plot.sum.normalized <- ggplot(df2,aes(Time, SizeNormalized, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.all.roads
T0<-2950
plot.all.roads <- ggplot( df,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
##geom_smooth(method = "lm", formula = y ~ poly(x, 4), se = FALSE)
plot.all.roads.normalized <- ggplot( df,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.normalized <- ggplot( df1,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road <- ggplot( df1,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum <- ggplot(df2,aes(Time, Size, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
##geom_smooth(method = "lm", formula = y ~ poly(x, 4), se = FALSE)
plot.sum.normalized <- ggplot(df2,aes(Time, SizeNormalized, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.all.roads
T0<-2900
plot.all.roads <- ggplot( df,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
##geom_smooth(method = "lm", formula = y ~ poly(x, 4), se = FALSE)
plot.all.roads.normalized <- ggplot( df,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.normalized <- ggplot( df1,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road <- ggplot( df1,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum <- ggplot(df2,aes(Time, Size, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
##geom_smooth(method = "lm", formula = y ~ poly(x, 4), se = FALSE)
plot.sum.normalized <- ggplot(df2,aes(Time, SizeNormalized, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.all.roads.normalized
plot.sum.normalized
plot.sum
plot.all.roads
plot.all.roads.normalized
dfprim<-df
dfprim$SizeNormalized<-dfprim$Size/60
dfprim$SizeNormalized
plot.all.roads.normalized.prim <- ggplot( dfprim,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.all.roads.normalized.prim
plot.sample.road
plot.sample.road.normalized
df1<-subset(df, RoadID == SampleRoadID)
plot.sample.road <- ggplot( df1,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.normalized <- ggplot( df1,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.normalized
plot.sample.road
SampleRoadID<-'f713621e-051e-4b24-94fd-eb4aa0c3ea14'
SumRoadID<-'00000000-0000-0000-0000-000000000000'
T0<-2200
library(gganimate)
library(ggplot2)
library(plotly)
library(cowplot)
library(tools)
f <- file.choose()
df <- read.table(f,header = TRUE)
ACC<-'ACC 1.0'
df1<-subset(df, RoadID == SampleRoadID)
df2<-subset(df, RoadID == SumRoadID)
plot.all.roads <- ggplot( df,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
##geom_smooth(method = "lm", formula = y ~ poly(x, 4), se = FALSE)
plot.all.roads.normalized <- ggplot( df,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.normalized <- ggplot( df1,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road <- ggplot( df1,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road
