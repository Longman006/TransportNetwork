p <- ggplot( aes(Time, Distance, color = Speed)) +
geom_point()
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point()
p
df <- read.table(f,header = TRUE)
df1<-subset(df, WaveFrontID == '62aa0281-26ab-46bc-9266-756d3e55f69b', select = c("Time","Distance","Speed") )
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point()
p
max<-max(df1$Distance)
x<-subset(df1, Time > 2800)
df2<-subset(df1, Time > 2800)
df1[["Distance" == max]]
df1[["Distance" > max]]
df1[["Distance" > max]]$Time
View(df)
View(df)
df2<-subset(df2, Time < 2965)
xy.lm <- lm(df2$Distance ~ df2$Time)
summary(xy.lm)
xy.lm$coefficients
xy.lm$Time<-df2$Time
b <- xy.lm$coefficients[1]
a <- xy.lm$coefficients[2]
xy.lm$Time<-df2$Time
getDistance <- function(x){
return(a*x+b)}
lapply(xy.lm$Time,getDistance)
df2$Distance<-lapply(xy.lm$Time,getDistance)
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_line(df2,aes(df2$Time,df2$Distance, col="red", lwd=3))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_line(df2,aes(df2$Time,df2$Distance, color="red"))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_line(df2,aes(df2$Time,df2$Distance, color="red"))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = a, slope = b)
p
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = a, slope = b,color="red",
linetype="dashed", size=1.5)
p
xy.lm$coefficients
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = -6545.384841, slope = 2.615398,color="red",
linetype="dashed", size=1.5)
p
# Equation of the line :
eq = paste0("y = ", round(xy.lm$coefficients[2],1), "*x + ", round(xy.lm$coefficients[1],1))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = xy.lm$coefficients[1], slope = xy.lm$coefficients[2],color="red",
linetype="dashed", size=1.5) + ggtitle(eq)
p
library(gganimate)
library(ggplot2)
library(plotly)
f <- file.choose()
df <- read.table(f,header = TRUE)
##WaveFront 906b0de3-8076-4b8e-84f2-e0016348d39a
##WaveEnd e3af6668-ccb0-4cba-8eda-1841fbb10c5f
##ACC 1.0
T1<-1923
T2<-2250
df1<-subset(df, WaveFrontID == '906b0de3-8076-4b8e-84f2-e0016348d39a', select = c("Time","Distance","Speed"))
max<-max(df1$Distance)
df2<-subset(df1, Time > T1)
df2<-subset(df2, Time < T2)
xy.lm <- lm(df2$Distance ~ df2$Time)
summary(xy.lm)
xy.lm$coefficients
b <- xy.lm$coefficients[1]
a <- xy.lm$coefficients[2]
xy.lm$Time<-df2$Time
getDistance <- function(x){
return(a*x+b)}
df2$Distance<-lapply(xy.lm$Time,getDistance)
# Equation of the line :
eq = paste0("y = ", round(xy.lm$coefficients[2],1), "*x + ", round(xy.lm$coefficients[1],1))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = xy.lm$coefficients[1], slope = xy.lm$coefficients[2],color="red",
linetype="dashed", size=1.5) + ggtitle(eq)
geom_line(df2,aes(df2$Time,df2$Distance, color="red"))
p
fig <- ggplotly(p)
fig
df2forFitting<-subset(df2, Time > T1+50)
xy.lm <- lm(df2$Distance ~ df2$Time)
summary(xy.lm)
xy.lm$coefficients
b <- xy.lm$coefficients[1]
a <- xy.lm$coefficients[2]
xy.lm$Time<-df2$Time
getDistance <- function(x){
return(a*x+b)}
df2$Distance<-lapply(xy.lm$Time,getDistance)
# Equation of the line :
eq = paste0("y = ", round(xy.lm$coefficients[2],1), "*x + ", round(xy.lm$coefficients[1],1))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = xy.lm$coefficients[1], slope = xy.lm$coefficients[2],color="red",
linetype="dashed", size=1.5) + ggtitle(eq)
geom_line(df2,aes(df2$Time,df2$Distance, color="red"))
p
fig <- ggplotly(p)
fig
df2forFitting<-subset(df2, Time > 2200)
xy.lm <- lm(df2$Distance ~ df2$Time)
summary(xy.lm)
xy.lm$coefficients
b <- xy.lm$coefficients[1]
a <- xy.lm$coefficients[2]
xy.lm$Time<-df2$Time
getDistance <- function(x){
return(a*x+b)}
df2$Distance<-lapply(xy.lm$Time,getDistance)
# Equation of the line :
eq = paste0("y = ", round(xy.lm$coefficients[2],1), "*x + ", round(xy.lm$coefficients[1],1))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = xy.lm$coefficients[1], slope = xy.lm$coefficients[2],color="red",
linetype="dashed", size=1.5) + ggtitle(eq)
geom_line(df2,aes(df2$Time,df2$Distance, color="red"))
p
fig <- ggplotly(p)
fig
df2forFitting
df2forFitting
xy.lm <- lm(df2forFitting$Distance ~ df2forFitting$Time)
summary(xy.lm)
xy.lm$coefficients
b <- xy.lm$coefficients[1]
a <- xy.lm$coefficients[2]
xy.lm$Time<-df2$Time
getDistance <- function(x){
return(a*x+b)}
df2$Distance<-lapply(xy.lm$Time,getDistance)
# Equation of the line :
eq = paste0("y = ", round(xy.lm$coefficients[2],1), "*x + ", round(xy.lm$coefficients[1],1))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = xy.lm$coefficients[1], slope = xy.lm$coefficients[2],color="red",
linetype="dashed", size=1.5) + ggtitle(eq)
geom_line(df2,aes(df2$Time,df2$Distance, color="red"))
p
fig <- ggplotly(p)
fig
df2forFitting<-subset(df2, Time > 2200)
a
b
xy.lm <- lm(df2forFitting$Distance ~ df2forFitting$Time)
xy.lm <- lm(df2forFitting$Distance ~ df2forFitting$Time)
xy.lm <- lm(df2$Distance ~ df2$Time)
df1<-subset(df, WaveFrontID == '906b0de3-8076-4b8e-84f2-e0016348d39a', select = c("Time","Distance","Speed"))
max<-max(df1$Distance)
df2<-subset(df1, Time > T1)
df2<-subset(df2, Time < T2)
df2forFitting<-subset(df2, Time > 2200)
df2forFitting
df2
xy.lm <- lm(df2$Distance ~ df2$Time)
xy.lm <- lm(df2forFitting$Distance ~ df2forFitting$Time)
summary(xy.lm)
xy.lm$coefficients
b <- xy.lm$coefficients[1]
a <- xy.lm$coefficients[2]
xy.lm$Time<-df2$Time
getDistance <- function(x){
return(a*x+b)}
df2$Distance<-lapply(xy.lm$Time,getDistance)
# Equation of the line :
eq = paste0("y = ", round(xy.lm$coefficients[2],1), "*x + ", round(xy.lm$coefficients[1],1))
p <- ggplot( df1,aes(Time, Distance, color = Speed)) +
geom_point() + geom_abline(intercept = xy.lm$coefficients[1], slope = xy.lm$coefficients[2],color="red",
linetype="dashed", size=1.5) + ggtitle(eq)
geom_line(df2,aes(df2$Time,df2$Distance, color="red"))
p
fig <- ggplotly(p)
fig
df1<-subset(df, WaveFrontID == c(WaveFront,WaveEnd), select = c("Time","Distance","Speed"))
##WaveFront 906b0de3-8076-4b8e-84f2-e0016348d39a
##WaveEnd e3af6668-ccb0-4cba-8eda-1841fbb10c5f
##ACC 1.0
WaveFront<-'906b0de3-8076-4b8e-84f2-e0016348d39a'
WaveEnd<-'e3af6668-ccb0-4cba-8eda-1841fbb10c5f'
T1<-1923
T2<-2250
df1<-subset(df, WaveFrontID == WaveFront | WaveFrontID == WaveEnd, select = c("Time","Distance","Speed", "WaveFrontID"))
df1
df2forFitting<-subset(df2, Time > 2200)
max<-max(df1$Distance)
df2<-subset(df1, Time > T1)
df2<-subset(df2, Time < T2)
df2forFitting<-subset(df2, Time > 2200)
filename<-"23-09-2020_20.41.02.CongestionSizeOnRoads"
filename2<-"23-09-2020_20.40.59.RoadStatisticsFile"
SampleRoadID<-'45d0ae8c-aa85-437c-aee0-d747d6e93bf1'
SampleRoadID2<-'32dd6829-ee64-4c56-afd5-67c1582531c3'
SumRoadID<-'00000000-0000-0000-0000-000000000000'
T0<-2000
library(gganimate)
library(ggplot2)
library(plotly)
library(cowplot)
library(tools)
f <- file.choose()
f <- file.choose()
df <- read.table(f,header = TRUE)
ACC<-'ACC 1.0'
df1<-subset(df, RoadID == SampleRoadID)
df2<-subset(df, RoadID == SumRoadID)
fAverage <- file.choose()
dfAverage <- read.table(fAverage,header = TRUE)
ACC<-'ACC 1.0'
df1Average<-subset(dfAverage, RoadID == SampleRoadID)
df2Average<-subset(dfAverage, RoadID == SumRoadID)
View(dfAverage)
View(dfAverage)
plot.sample.road.normalized <- ggplot( df1Average,aes(Time, AverageSpeedNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.normalized
plot.sum.average.speed <- ggplot(df2Average,aes(Time, AverageSpeed, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum.average.speed
plot.sum.average.speed <- ggplot(df2Average,aes(Time, AverageTime, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum.average.time <- ggplot(df2Average,aes(Time, AverageTime, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum.average.time
View(df2Average)
View(df2Average)
dfAverage[is.na(dfAverage)] <- 0
filename<-"25-09-2020_18.02.23.CongestionSizeOnRoads"
filename2<-"25-09-2020_18.02.21.RoadStatisticsFile"
SampleRoadID<-'9d72ac90-ab7e-4d4f-bd67-5ef46fc116a9'
SampleRoadID2<-'42810e18-bfb2-4d4a-b7de-b2bbf4c83cc9'
SumRoadID<-'00000000-0000-0000-0000-000000000000'
T0<-1300
library(gganimate)
library(ggplot2)
library(plotly)
library(cowplot)
f <- file.choose()
df <- read.table(f,header = TRUE)
ACC<-'ACC 1.0'
df1<-subset(df, RoadID == SampleRoadID)
df2<-subset(df, RoadID == SumRoadID)
fAverage <- file.choose()
dfAverage <- read.table(fAverage,header = TRUE)
dfAverage[is.na(dfAverage)] <- 0
ACC<-'ACC 1.0'
df1Average<-subset(dfAverage, RoadID == SampleRoadID)
df2Average<-subset(dfAverage, RoadID == SumRoadID)
plot.all.roads <- ggplot( df,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
##geom_smooth(method = "lm", formula = y ~ poly(x, 4), se = FALSE)
plot.all.roads.normalized <- ggplot( df,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.normalized <- ggplot( df1,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road <- ggplot( df1,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum <- ggplot(df2,aes(Time, Size, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.all.roads.average.speed <- ggplot( dfAverage,aes(Time, AverageSpeed, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
##geom_smooth(method = "lm", formula = y ~ poly(x, 4), se = FALSE)
plot.all.roads.average.speed.normalized <- ggplot( dfAverage,aes(Time, AverageSpeedNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.average.speed.normalized <- ggplot( df1Average,aes(Time, AverageSpeedNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.speed.average <- ggplot( df1Average,aes(Time, AverageSpeed, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.average.speed.normalized <- ggplot( df1Average,aes(Time, AverageSpeedNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.Time.average <- ggplot( df1Average,aes(Time, AverageSpeed, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.Time.average <- ggplot( df1Average,aes(Time, AverageSpeed, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum.average.speed <- ggplot(df2Average,aes(Time, AverageSpeed, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum.average.time <- ggplot(df2Average,aes(Time, AverageTime, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum.average.speed
plot.sum
plot.sum.average.speed
plot.sum.average.time
plot.all.roads.average.speed
plot.sample.road.Time.average
plot.sample.road.time.average.normalized <- ggplot( df1Average,aes(Time, AverageTimeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.time.average <- ggplot( df1Average,aes(Time, AverageTime, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.time.average
plot.sample.road.speed.average
plot.sample.road.average.speed.normalized
plot.sample.road
df1<-subset(df, RoadID == SampleRoadID2)
df1Average<-subset(dfAverage, RoadID == SampleRoadID2)
plot.sample.road.normalized <- ggplot( df1,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road <- ggplot( df1,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum <- ggplot(df2,aes(Time, Size, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.average.speed.normalized <- ggplot( df1Average,aes(Time, AverageSpeedNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.speed.average <- ggplot( df1Average,aes(Time, AverageSpeed, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road
plot.sample.road.speed.average
plot.sample.road
plot.sample.road
plot.sample.road.speed.average
plot.sample.road.normalized
View(df1Average)
View(df1Average)
dfAverage[is.infinite(dfAverage)] <- 0
is.na(dfAverage) <- do.call(cbind,lapply(dfAverage, is.infinite))
View(dfAverage)
View(dfAverage)
dfAverage[is.infinite(dfAverage)] <- 0
dfAverage[is.na(dfAverage)] <- 0
ACC<-'ACC 1.0'
df1Average<-subset(dfAverage, RoadID == SampleRoadID2)
df2Average<-subset(dfAverage, RoadID == SumRoadID)
plot.all.roads <- ggplot( df,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
##geom_smooth(method = "lm", formula = y ~ poly(x, 4), se = FALSE)
plot.all.roads.normalized <- ggplot( df,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.normalized <- ggplot( df1,aes(Time, SizeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road <- ggplot( df1,aes(Time, Size, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum <- ggplot(df2,aes(Time, Size, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.all.roads.average.speed <- ggplot( dfAverage,aes(Time, AverageSpeed, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
##geom_smooth(method = "lm", formula = y ~ poly(x, 4), se = FALSE)
plot.all.roads.average.speed.normalized <- ggplot( dfAverage,aes(Time, AverageSpeedNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.average.speed.normalized <- ggplot( df1Average,aes(Time, AverageSpeedNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.speed.average <- ggplot( df1Average,aes(Time, AverageSpeed, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.average.speed.normalized <- ggplot( df1Average,aes(Time, AverageSpeedNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.time.average <- ggplot( df1Average,aes(Time, AverageTime, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sample.road.time.average.normalized <- ggplot( df1Average,aes(Time, AverageTimeNormalized, color = RoadID)) +
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum.average.speed <- ggplot(df2Average,aes(Time, AverageSpeed, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum.average.time <- ggplot(df2Average,aes(Time, AverageTime, color = RoadID) )+
theme(legend.position="bottom")+
geom_line()+
geom_vline(xintercept = T0,
color = "blue", size=0.5)
plot.sum.average.time
View(df2Average)
View(df2Average)
View(dfAverage)
View(dfAverage)
View(df1Average)
plot.sample.road.time.average.normalized
plot.sample.road.normalized
plot.sum.grid <- plot_grid(plot.sum, plot.sum.average.speed,plot.sum.average.time, labels = paste(ACC))
library(gganimate)
library(ggplot2)
library(plotly)
library(cowplot)
library(tools)
plot.sum.grid <- plot_grid(plot.sum, plot.sum.average.speed,plot.sum.average.time, labels = paste(ACC))
plot.file.name<-paste(file_path_sans_ext(basename(f)),'Total','.png')
plot.sum.grid
plot.sum.grid <- plot_grid(plot.sum, plot.sum.average.speed, labels = paste(ACC))
plot.file.name<-paste(file_path_sans_ext(basename(f)),'Total','.png')
plot.file.name
plot.file.name<-paste(file_path_sans_ext(basename(f)),'Total Congestion','.png')
setwd("~/TS/R/WaveCongestionVSAverageOnRoad/Sample2")
save_plot(plot.file.name, plot.sum.grid, ncol = 2)
plot.sample.road.normalized
plot.sample.road.average.speed.normalized
plot.sample.road.time.average
plot.sample.road.normalized
plot.sample.road
plot.sample0.grid <- plot_grid(plot.sample.road, plot.sample.road.time.average, labels = paste(ACC))
plot.file.name<-paste(file_path_sans_ext(basename(f)),'Sample Road Congestion VS Average Time','.png')
plot.sample0.grid
save_plot(plot.file.name, plot.sum.grid, ncol = 2)
plot.sample0.grid <- plot_grid(plot.sample.road, plot.sample.road.speed.average, labels = paste(ACC))
plot.file.name<-paste(file_path_sans_ext(basename(f)),'Sample Road Congestion VS Average Speed','.png')
save_plot(plot.file.name, plot.sum.grid, ncol = 2)
plot.sample1.grid <- plot_grid(plot.sample.road, plot.sample.road.speed.average, labels = paste(ACC))
plot.sample0.grid <- plot_grid(plot.sample.road, plot.sample.road.time.average, labels = paste(ACC))
plot.file.name<-paste(file_path_sans_ext(basename(f)),'Sample Road Congestion VS Average Time','.png')
save_plot(plot.file.name, plot.sample0.grid, ncol = 2)
plot.sample1.grid <- plot_grid(plot.sample.road, plot.sample.road.speed.average, labels = paste(ACC))
plot.file.name<-paste(file_path_sans_ext(basename(f)),'Sample Road Congestion VS Average Speed','.png')
save_plot(plot.file.name, plot.sample1.grid, ncol = 2)
